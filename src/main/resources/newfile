
package com.mycompany.fire_alarm_system;
import java.util.Map.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.*;
import static com.mycompany.fire_alarm_system.MainScreen.f0;
import static com.mycompany.fire_alarm_system.MainScreen.f1;
import static com.mycompany.fire_alarm_system.MainScreen.f2;
import static com.mycompany.fire_alarm_system.MainScreen.f3;
import static com.mycompany.fire_alarm_system.MainScreen.f4;
import static com.mycompany.fire_alarm_system.MainScreen.f5;

//import java.util.concurrent.Executors;
//import java.util.concurrent.ScheduledExecutorService;
//import java.util.concurrent.ScheduledFuture;
//import java.util.concurrent.TimeUnit;
import java.awt.Color;
import java.awt.Component;
import javax.swing.table.DefaultTableCellRenderer;


public class Start_Monitoring extends javax.swing.JFrame {

    /**
     * Creates new form Start_Monitoring
     */
    public Start_Monitoring() {
        initComponents();
        jTable1.setDefaultRenderer(String.class, new colorcode());

    }
    //ScheduledExecutorService ses = Executors.newScheduledThreadPool(1);
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollBar1 = new javax.swing.JScrollBar();
        jLabel5 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jMenu5 = new javax.swing.JMenu();
        jMenu6 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jButton2.setBackground(new java.awt.Color(255, 51, 51));
        jButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton2.setText("STOP");
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(51, 102, 255));
        jButton3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton3.setText("START");
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTable1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "Smoke Sensor(OD/m)", "Heat Sensor(Celsius)", "CO Sensor(P.P.M.)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setRowHeight(30);
        jTable1.setRowSelectionAllowed(false);
        jTable1.setShowGrid(true);
        jTable1.setSurrendersFocusOnKeystroke(true);
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
        }

        jLabel2.setText("jLabel2");

        jLabel3.setText("jLabel2");

        jLabel4.setText("jLabel2");

        jLabel5.setText("jLabel2");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 774, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jLabel1.setBackground(new java.awt.Color(248, 148, 6));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Ground Floor");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
        );

        jMenuBar1.setBackground(new java.awt.Color(255, 153, 153));
        jMenuBar1.setForeground(new java.awt.Color(255, 153, 153));

        jMenu1.setText("Floor 0");
        jMenu1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenu1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jMenu1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jMenu1FocusLost(evt);
            }
        });
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu1MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Floor 1");
        jMenu2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu2MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu2);

        jMenu3.setText("Floor 2");
        jMenu3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenu3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu3MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu3);

        jMenu4.setText("Floor 3");
        jMenu4.setContentAreaFilled(false);
        jMenu4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenu4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu4MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu4);

        jMenu5.setText("Floor 4");
        jMenu5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenu5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu5MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu5);

        jMenu6.setText("Floor 5");
        jMenu6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenu6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu6MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu6);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {                                      
        // TODO add your handling code here:
        MainScreen.dashboard.setVisible(true);
        this.dispose();
    }                                     

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {                                      
        // TODO add your handling code here:
        for(Entry<String,Location> mp : f0.entrySet()){
            if(!mp.getValue().Sid.equals(""))
            {
                // Runnable task10=() ->{
                mp.getValue().setScvalue();
            }
               // ScheduledFuture<?> scheduledFuture = ses.scheduleAtFixedRate(task10, 0, 2, TimeUnit.SECONDS);
            }
            if(!mp.getValue().Hid.equals(""))
                {
                // Runnable task11=() ->{
                mp.getValue().setHcvalue();
            }
               // ScheduledFuture<?> scheduledFuture = ses.scheduleAtFixedRate(task11, 0, 2, TimeUnit.SECONDS);
            }
            if(!mp.getValue().Cid.equals(""))
                {
                // Runnable task12=() ->{
                mp.getValue().setCcvalue();
            }
               // ScheduledFuture<?> scheduledFuture = ses.scheduleAtFixedRate(task12, 0, 2, TimeUnit.SECONDS);
            }
        }
        for(Entry<String,Location> mp : f1.entrySet()){
            if(!mp.getValue().Sid.equals(""))
            {
                // Runnable task20=() ->{
                mp.getValue().setScvalue();
            }
               // ScheduledFuture<?> scheduledFuture = ses.scheduleAtFixedRate(task20, 0, 2, TimeUnit.SECONDS);
            }
            if(!mp.getValue().Hid.equals(""))
                {
                // Runnable task21=() ->{
                mp.getValue().setHcvalue();
            }
               // ScheduledFuture<?> scheduledFuture = ses.scheduleAtFixedRate(task21, 0, 2, TimeUnit.SECONDS);
            }
            if(!mp.getValue().Cid.equals(""))
                {
                // Runnable task22=() ->{
                mp.getValue().setCcvalue();
            }
               // ScheduledFuture<?> scheduledFuture = ses.scheduleAtFixedRate(task22, 0, 2, TimeUnit.SECONDS);
            }
        }
        for(Entry<String,Location> mp : f2.entrySet()){
            if(!mp.getValue().Sid.equals(""))
            {
                // Runnable task30=() ->{
                mp.getValue().setScvalue();
            }
               // ScheduledFuture<?> scheduledFuture = ses.scheduleAtFixedRate(task30, 0, 2, TimeUnit.SECONDS);
            }
            if(!mp.getValue().Hid.equals(""))
                {
                // Runnable task31=() ->{
                mp.getValue().setHcvalue();
            }
               // ScheduledFuture<?> scheduledFuture = ses.scheduleAtFixedRate(task31, 0, 2, TimeUnit.SECONDS);
            }
            if(!mp.getValue().Cid.equals(""))
                {
                // Runnable task32=() ->{
                mp.getValue().setCcvalue();
            }
               // ScheduledFuture<?> scheduledFuture = ses.scheduleAtFixedRate(task32, 0, 2, TimeUnit.SECONDS);
            }
        }
        for(Entry<String,Location> mp : f3.entrySet()){
            if(!mp.getValue().Sid.equals(""))
            {
                // Runnable task40=() ->{
                mp.getValue().setScvalue();
            }
               // ScheduledFuture<?> scheduledFuture = ses.scheduleAtFixedRate(task40, 0, 2, TimeUnit.SECONDS);
            }
            if(!mp.getValue().Hid.equals(""))
                {
                // Runnable task41=() ->{
                mp.getValue().setHcvalue();
            }
               // ScheduledFuture<?> scheduledFuture = ses.scheduleAtFixedRate(task41, 0, 2, TimeUnit.SECONDS);
            }
            if(!mp.getValue().Cid.equals(""))
                {
                // Runnable task42=() ->{
                mp.getValue().setCcvalue();
            }
               // ScheduledFuture<?> scheduledFuture = ses.scheduleAtFixedRate(task42, 0, 2, TimeUnit.SECONDS);
            }
        }
        for(Entry<String,Location> mp : f4.entrySet()){
            if(!mp.getValue().Sid.equals(""))
            {
                // Runnable task50=() ->{
                mp.getValue().setScvalue();
            }
               // ScheduledFuture<?> scheduledFuture = ses.scheduleAtFixedRate(task50, 0, 2, TimeUnit.SECONDS);
            }
            if(!mp.getValue().Hid.equals(""))
                {
                // Runnable task51=() ->{
                mp.getValue().setHcvalue();
            }
               // ScheduledFuture<?> scheduledFuture = ses.scheduleAtFixedRate(task51, 0, 2, TimeUnit.SECONDS);
            }
            if(!mp.getValue().Cid.equals(""))
                {
                // Runnable task52=() ->{
                mp.getValue().setCcvalue();
            }
               // ScheduledFuture<?> scheduledFuture = ses.scheduleAtFixedRate(task52, 0, 2, TimeUnit.SECONDS);
            }
        }
        for(Entry<String,Location> mp : f5.entrySet()){
            if(!mp.getValue().Sid.equals(""))
            {
                // Runnable task60=() ->{
                mp.getValue().setScvalue();
            }
               // ScheduledFuture<?> scheduledFuture = ses.scheduleAtFixedRate(task60, 0, 2, TimeUnit.SECONDS);
            }
            if(!mp.getValue().Hid.equals(""))
                {
                // Runnable task61=() ->{
                mp.getValue().setHcvalue();
            }
               // ScheduledFuture<?> scheduledFuture = ses.scheduleAtFixedRate(task61, 0, 2, TimeUnit.SECONDS);
            }
            if(!mp.getValue().Cid.equals(""))
                {
                // Runnable task62=() ->{
                mp.getValue().setCcvalue();
            }
               // ScheduledFuture<?> scheduledFuture = ses.scheduleAtFixedRate(task62, 0, 2, TimeUnit.SECONDS);
            }
        }
        
        
        DefaultTableModel tModel1=(DefaultTableModel)jTable1.getModel();
        if(tModel1.getRowCount()!=0){
            int c =tModel1.getRowCount();
        for(int i=0;i<c;i++){
            tModel1.removeRow(0);
        }}
       
        DefaultTableModel tModel=(DefaultTableModel)jTable1.getModel();
        for(Entry<String,Location> mp : f0.entrySet()){
        String data[]={mp.getKey(),String.valueOf(mp.getValue().Scvalue),String.valueOf(mp.getValue().Hcvalue),String.valueOf(mp.getValue().Ccvalue)}
        tModel.addRow(data);
        }
    }                                     

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    }                                        

    private void jMenu2MouseClicked(java.awt.event.MouseEvent evt) {                                    
        // TODO add your handling code here:
        jLabel1.setText("1st Floor");
        DefaultTableModel tModel1=(DefaultTableModel)jTable1.getModel();
        if(tModel1.getRowCount()!=0){
            int c =tModel1.getRowCount();
        for(int i=0;i<c;i++){
            tModel1.removeRow(0);
        }}
        DefaultTableModel tModel=(DefaultTableModel)jTable1.getModel();
        for(Entry<String,Location> mp : f1.entrySet()){       
        
            // Runnable task2=()->{
        String data[]={mp.getKey(),String.valueOf(mp.getValue().Scvalue),String.valueOf(mp.getValue().Hcvalue),String.valueOf(mp.getValue().Ccvalue)};
        tModel.addRow(data);
        }
        // ScheduledFuture<?> scheduledFuture = ses.scheduleAtFixedRate(task2, 0, 2, TimeUnit.SECONDS); 
        }
    }                                   

    private void jMenu3MouseClicked(java.awt.event.MouseEvent evt) {                                    
        // TODO add your handling code here:
        jLabel1.setText("2nd Floor");
        DefaultTableModel tModel1=(DefaultTableModel)jTable1.getModel();
       if(tModel1.getRowCount()!=0){
            int c =tModel1.getRowCount();
        for(int i=0;i<c;i++){
            tModel1.removeRow(0);
        }}
        DefaultTableModel tModel=(DefaultTableModel)jTable1.getModel();
        for(Entry<String,Location> mp : f2.entrySet()){
        // Runnable task3=()->{
        String data[]={mp.getKey(),String.valueOf(mp.getValue().Scvalue),String.valueOf(mp.getValue().Hcvalue),String.valueOf(mp.getValue().Ccvalue)};
        tModel.addRow(data);
        }
        // ScheduledFuture<?> scheduledFuture = ses.scheduleAtFixedRate(task3, 0, 2, TimeUnit.SECONDS); 
        
        }
    }                                   

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {                                    
        // TODO add your handling code here:
        jLabel1.setText("Ground Floor");
        DefaultTableModel tModel1=(DefaultTableModel)jTable1.getModel();
        if(tModel1.getRowCount()!=0){
            int c =tModel1.getRowCount();
        for(int i=0;i<c;i++){
            tModel1.removeRow(0);
        }}
        DefaultTableModel tModel=(DefaultTableModel)jTable1.getModel();
        for(Entry<String,Location> mp : f0.entrySet()){
        // Runnable task111=()->{
        String data[]={mp.getKey(),String.valueOf(mp.getValue().Scvalue),String.valueOf(mp.getValue().Hcvalue),String.valueOf(mp.getValue().Ccvalue)};
        tModel.addRow(data);
        }
        // ScheduledFuture<?> scheduledFuture = ses.scheduleAtFixedRate(task111, 0, 2, TimeUnit.SECONDS); 
        }
    }                                   

    private void jMenu4MouseClicked(java.awt.event.MouseEvent evt) {                                    
        // TODO add your handling code here:
        jLabel1.setText("3rd Floor");
        DefaultTableModel tModel1=(DefaultTableModel)jTable1.getModel();
        if(tModel1.getRowCount()!=0){
            int c =tModel1.getRowCount();
        for(int i=0;i<c;i++){
            tModel1.removeRow(0);
        }}
        DefaultTableModel tModel=(DefaultTableModel)jTable1.getModel();
        for(Entry<String,Location> mp : f3.entrySet()){
       // Runnable task4=()->{
        String data[]={mp.getKey(),String.valueOf(mp.getValue().Scvalue),String.valueOf(mp.getValue().Hcvalue),String.valueOf(mp.getValue().Ccvalue)};
        tModel.addRow(data);
        }
        // ScheduledFuture<?> scheduledFuture = ses.scheduleAtFixedRate(task4, 0, 2, TimeUnit.SECONDS); 
        }
    }                                   

    private void jMenu5MouseClicked(java.awt.event.MouseEvent evt) {                                    
        // TODO add your handling code here:
        jLabel1.setText("4th Floor");
        DefaultTableModel tModel1=(DefaultTableModel)jTable1.getModel();
        if(tModel1.getRowCount()!=0){
            int c =tModel1.getRowCount();
        for(int i=0;i<c;i++){
            tModel1.removeRow(0);
        }}
        DefaultTableModel tModel=(DefaultTableModel)jTable1.getModel();
        for(Entry<String,Location> mp : f4.entrySet()){
        // Runnable task5=()->{
        String data[]={mp.getKey(),String.valueOf(mp.getValue().Scvalue),String.valueOf(mp.getValue().Hcvalue),String.valueOf(mp.getValue().Ccvalue)};
        tModel.addRow(data);
        }
        // ScheduledFuture<?> scheduledFuture = ses.scheduleAtFixedRate(task5, 0, 2, TimeUnit.SECONDS); 
        }
    }                                   

    private void jMenu6MouseClicked(java.awt.event.MouseEvent evt) {                                    
        // TODO add your handling code here:
        jLabel1.setText("5th Floor");
        DefaultTableModel tModel1=(DefaultTableModel)jTable1.getModel();
        if(tModel1.getRowCount()!=0){
            int c =tModel1.getRowCount();
        for(int i=0;i<c;i++){
            tModel1.removeRow(0);
        }}
        DefaultTableModel tModel=(DefaultTableModel)jTable1.getModel();
        for(Entry<String,Location> mp : f5.entrySet()){
        // Runnable task6=()->{
        String data[]={mp.getKey(),String.valueOf(mp.getValue().Scvalue),String.valueOf(mp.getValue().Hcvalue),String.valueOf(mp.getValue().Ccvalue)};
        tModel.addRow(data);
        }
        // ScheduledFuture<?> scheduledFuture = ses.scheduleAtFixedRate(task6, 0, 2, TimeUnit.SECONDS); 
        
        }
    }                                   

    private void jMenu1FocusGained(java.awt.event.FocusEvent evt) {                                   
        // TODO add your handling code here:
        jMenu1.setForeground(new java.awt.Color(230, 57, 70));
    }                                  

    private void jMenu1FocusLost(java.awt.event.FocusEvent evt) {                                 
        // TODO add your handling code here:
        jMenu1.setForeground(new java.awt.Color(29,53,87));
    }                                

    /**
     * @param args the command line arguments
     */
    public class colorcode extends DefaultTableCellRenderer {

    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus,int row,int col) {
        float v0=0,v1=0,v2=0,v3=0;
        Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, col);
        switch(col) {
            case 1:
                v1 = Float.parseFloat((String) table.getModel().getValueAt(row, col));
            case 2:
                v2 = Float.parseFloat((String) table.getModel().getValueAt(row, col));
            case 3:
                v3 = Float.parseFloat((String) table.getModel().getValueAt(row, col));
            default:
                v0 = Float.parseFloat((String) table.getModel().getValueAt(row, col));
        }
        if(v1>Location.Stvalue&&col==1)
            c.setForeground(Color.red);
        else if(v2>Location.Htvalue&&col==2)
            c.setForeground(Color.red);
        else if(v3>Location.Ctvalue&&col==3)
            c.setForeground(Color.red);
        else
            c.setForeground(Color.black);

        return c;
    }
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Start_Monitoring.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Start_Monitoring.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Start_Monitoring.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Start_Monitoring.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Start_Monitoring().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration                   
}